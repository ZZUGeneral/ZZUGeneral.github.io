{"relevantArticles":[{"articleTitle":"核心防御机制","articleAbstractText":"\u2003\u2003Web 引用程序的基本安全问题（所有用户的输入都不可信）致使应用程序实施大量安全机制来抵御攻击。虽然在设计细节和执行效率上千差万别，但是所有的安全机制在概念上都具有相似性。 \u2003\u2003Web 应用程序采用的防御机制由以下几个核心因素构成：  处理用户访问应用程序的数据与功能，防止用户获得未授权访问 处理用户对应用程序功能的输入，防止错误输入造成不良影响 防范攻击者，确保应用程序在成为直接攻击目标时能正常运转，并采取适当的防御与攻击措施来挫败攻击者 管理应用程序本身，帮助管理员监控其行为，配置其功能  处理用户访问 \u2003\u2003几乎所有的应用程序都必须满足一个中心安全要求，即处理用户访问其数据与功能。 \u2003\u2003大多数 Web 应用程序使用三层相会关联的安全机制处理用户访问：  身份验证 会话管理 访问控制  \u2003\u2003上述每个机制都是应用程序受攻击面的一个关键部分。由于这些机制相互依赖，因此根本不可能提供强大的总体安全保护，任何一个部分存在缺陷都可能是攻击者自由访问应用程序的功能和数据。 处理用户输入 \u2003\u2003用户的输入具有多样性。 \u2003\u2003除了用户通过浏览器提交的各种输入，一个典型的应用程序还会收到大量数据，他们....","articleStatus":0,"articlePermalink":"/articles/2020/10/14/1602667334063.html","articleImg1URL":"https://b3logfile.com/bing/20200202.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Web渗透之信息搜集","articleAbstractText":"渗透测试之信息搜集 域名信息 \u2003\u2003Whois 域名详细信息 \u2003\u2003kali 默认安装了 Whois，使用命令： whois baidu.com  \u2003\u2003网站： \u2003\u2003爱站工具网 http://whois.aizhan.com \u2003\u2003站长之家 http://whois.chinaz.com \u2003\u2003VirusTotal http://www.virtustotal.com 备案信息 \u2003\u2003ICP 备案信息查询网 http://www.beianbeian.com \u2003\u2003天眼查 http://www.tainyan.com 敏感信息收集 \u2003\u2003Google    关键字 说明     Site 指定域名   Inurl URL 中存在关键字的网页   Intext 网页正文中的关键字   Filetype 指定文件类型   Intitle 网页标题中的关键字   link link:baidu.com 即表示返回所有和 baidu.com 做了链接的 URL   info 查找指定站点的一些基本信息   cache 搜索 Google 里关于某些内容的缓存    \u2003\u2003乌云漏洞表 http://wooyun.....","articleStatus":0,"articlePermalink":"/articles/2020/10/12/1602510666141.html","articleImg1URL":"https://b3logfile.com/bing/20180612.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Web应用程序安全","articleAbstractText":"\"本站点是安全的\" \u2003\u2003实际上，大多数 Web 应用程序并不安全。下面列出常见类型的漏洞：  不完善的身份验证措施 不完善的访问控制措施 SQL 注入 跨站点脚本 信息泄露 跨站点请求伪造  核心安全问题：用户可以提交任意输入 \u2003\u2003Web 应用程序的核心安全问题：用户可以提交任意输入。由于引用程序都无法控制客户端，用户几乎可向服务端应用程序提交任意输入。引用程序必须假设所有输入的信息都是恶意的输入，并必须采取措施确保攻击者无法使用专门设计的输入破坏应用程序，干扰其逻辑结构与行为，并最终达到非法访问其数据和功能的目的。 \u2003\u2003这个核心问题变现在许多方面：  用户可干预客户端和服务端见传送的所有数据，包括请求参数，Cookie，HTTP 信息头等。 用户可按任何顺序发送请求，并可在应用程序要求之外的不同阶段不止一次提交或者根本不提交参数。即用户的操作和开发者对用户和引用程序交互方式做出的任何假设完全不同。 用户并不仅限于一种 Web 浏览器访问应用程序。各种各样的工具可以提出普通浏览器无法提交的请求，并能迅速生成大量的请求，查找和利用安全问题达到自己的目的。  \u2003\u2003绝大多数针对 Web 应用....","articleStatus":0,"articlePermalink":"/articles/2020/10/13/1602577132460.html","articleImg1URL":"https://b3logfile.com/bing/20200526.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}