{"relevantArticles":[{"articleTitle":"XPath注入","articleAbstractText":"XPath 简介 XPath 即为 XML 路径语言 (XML Path Language) ，是一种用于导航 XML 文档并从中获取数据的解释性语言。 如果 Web 应哟偶那个程序将数据保存在 XML 文档中，那么就是以使用 XPath 访问数据，以响应用户提交的输入。如果这个输入未经任何过滤或精华就插入到 XPath 查询中，攻击者就可以通过控制查询来破坏应用程序的逻辑，或者获取未经授权访问的数据。 XML 文档不是保存企业数据的首选工具，但是它常常用于保存可根据用户输入获取的应用程序配置数据或者保存一些简单信息。 &lt;users&gt; &lt;user&gt; &nbsp; &lt;username&gt;First&lt;/username&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;password&gt;aaaaaa&lt;/password&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt;email&gt;first@qq.com&lt;/email&gt; &nbsp; &nbsp; &nbsp; &nbsp;&lt....","articleStatus":0,"articlePermalink":"/articles/2020/10/27/1603789794959.html","articleImg1URL":"https://b3logfile.com/bing/20190419.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Whatweb 使用教程","articleAbstractText":"Whatweb \u2003\u2003WhatWeb 是一个开源的网站指纹识别软件。 \u2003\u2003WhatWeb 可识别 Web 技术，包括内容管理系统（CMS），博客平台，统计/分析包，JavaScript 库，服务器和嵌入式设备。 简单使用  单个目标 whatweb 网址   批量扫描 whatweb -input-file=/path 或 whatweb -i /path    \u2003\u2003参数说明：  -i : 指定要扫描的文件 -v : 详细显示扫描的结果 -a : 指定运行级别（1-4） --log-brief=FILE 简要的记录，每个网站只记录一条返回信息 --log-verbose=FILE 详细输出 --log-xml=FILE 返回 XML 格式的日志 --log-json=FILE 以 JSON 格式记录日志 --log-json-verbose=FILE 记录详细的 JSON 日志 --log-magictree=FILE XML 的树形结构  \u2003\u2003Tips：  JSON 格式需要安装 JSON 依赖， sudo gem install JSON  高级用法 whatweb -v 192.1....","articleStatus":0,"articlePermalink":"/articles/2020/10/26/1603679856210.html","articleImg1URL":"https://b3logfile.com/bing/20191127.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"核心防御机制","articleAbstractText":"\u2003\u2003Web 引用程序的基本安全问题（所有用户的输入都不可信）致使应用程序实施大量安全机制来抵御攻击。虽然在设计细节和执行效率上千差万别，但是所有的安全机制在概念上都具有相似性。 \u2003\u2003Web 应用程序采用的防御机制由以下几个核心因素构成：  处理用户访问应用程序的数据与功能，防止用户获得未授权访问 处理用户对应用程序功能的输入，防止错误输入造成不良影响 防范攻击者，确保应用程序在成为直接攻击目标时能正常运转，并采取适当的防御与攻击措施来挫败攻击者 管理应用程序本身，帮助管理员监控其行为，配置其功能  处理用户访问 \u2003\u2003几乎所有的应用程序都必须满足一个中心安全要求，即处理用户访问其数据与功能。 \u2003\u2003大多数 Web 应用程序使用三层相会关联的安全机制处理用户访问：  身份验证 会话管理 访问控制  \u2003\u2003上述每个机制都是应用程序受攻击面的一个关键部分。由于这些机制相互依赖，因此根本不可能提供强大的总体安全保护，任何一个部分存在缺陷都可能是攻击者自由访问应用程序的功能和数据。 处理用户输入 \u2003\u2003用户的输入具有多样性。 \u2003\u2003除了用户通过浏览器提交的各种输入，一个典型的应用程序还会收到大量数据，他们....","articleStatus":0,"articlePermalink":"/articles/2020/10/14/1602667334063.html","articleImg1URL":"https://b3logfile.com/bing/20200202.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Web安全攻防之常见漏洞","articleAbstractText":"SQL 注入 \u2003\u2003SQL 注入即是指 Web 应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在 Web 应用程序中事先定义好的查询语句的结尾上添加额外的 SQL 语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。 SQL 语句 SQL 注入基础 SQL 注入原理  参数用户可控：前端传给后台的参数内容是用户可控制的 参数带入数据库查询：传入的参数拼接到 SQL 语句，且带入数据库查询  相关知识点 \u2003\u2003information_schema 库中：  SCHEMATA 表存储该用户创建的所有数据库的库名，需要记住 SCHEMA_NAME 字段 TABLES 表存储该用户创建的所有数据库的库名和表名，需要记住 TABLE_SCHEMA 和 TABLE_NAME 字段 COLUMNS 表存储改用创建的所有数据库的库名，表名和字段名。需要记住 TABLE_SCHEMA,TABLE_NAME 和 COLUMNS_NAME  函数  database() : 当前网站使用的数据库 version() : 当前 My....","articleStatus":0,"articlePermalink":"/articles/2020/10/12/1602511210520.html","articleImg1URL":"file://I:/md/img/WEB%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E4%B9%8B%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E/image-20200903092803771.png?lastModify=1602511117?imageView2/1/w/1280/h/720/interlace/1/q/100"},{"articleTitle":"Nmap 使用教程","articleAbstractText":"选项概要 Nmap 7.91SVN（https://nmap.org） 用法：nmap [扫描类型] [选项] {目标规范} 目标规格： 可以传递主机名，IP 地址，网络等。 例如：scanme.nmap.org，microsoft.com/24，192.168.0.1；10.0.0-255.1-254 -iL ：来自主机/网络列表的输入 -iR &lt; 主机数量 &gt;：选择随机目标 --exclude &lt;host1 [，host2] [，host3]，...&gt;：排除主机/网络 --excludefile &lt;exclude_file&gt;：从文件中排除列表 主机发现： -sL：列出扫描-仅列出要扫描的目标 -sn：Ping 扫描-禁用端口扫描 -Pn：将所有主机视为联机-跳过主机发现 -PS / PA / PU / PY [端口列表]：对给定端口的 TCP SYN / ACK，UDP 或 SCTP 发现 -PE / PP / PM：ICMP 回显，时间戳和网络掩码请求发现探针 -PO [协议列表]：IP 协议 Ping -n / -R：从不进行 DNS 解析/....","articleStatus":0,"articlePermalink":"/articles/2020/10/26/1603708218188.html","articleImg1URL":"https://b3logfile.com/bing/20190331.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100"}]}